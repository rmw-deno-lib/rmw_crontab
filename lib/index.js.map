{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "..",
  "sources": [
    "src/index.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,IAAA,KAAA,EAAA,KAAA,EAAA;;AAAA,OAAA;EAAQ,IAAR;CAAA,MAAA;;AAEA,OAAA,IAAa,OAAN,MAAA,KAAA;EACL,WAAY,UAAA,QAAA,CAAA;IAAC,IAAC,CAAA;IAAU,IAAC,CAAA;IACvB,IAAC,CAAA,GAAD,GAAO;EADG;;EAGZ,GAAI,CAAA,CAAA;AACN,QAAA,CAAA,EAAA,QAAA,EAAA;IAAI,CAAA,CAAC,QAAD,CAAA,GAAa,IAAb;AACA;IAAA,KAAA,QAAA;MACE,CAAC,CAAC,CAAD,CAAD,IAAQ;MACR,IAAG,CAAC,CAAC,CAAD,CAAD,GAAO,QAAV;QACE,CAAC,CAAC,CAAD,CAAD,GAAK,CAAC,CAAC,CAAD;QACN,IAAA,CAAK,CAAC,CAAC,CAAD,CAAN,EAFF;;IAFF;EAFE;;EAUJ,GAAI,CAAA,CAAA;AACN,QAAA;IAAI,IAAC,CAAA,KAAD,GAAS,WAAA,CACP,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,IAAV,CADO,EAEP,IAAC,CAAA,QAAD,GAAU,IAFH;IAKT,GAAA,GAAM,QAAA,CAAC,QAAD,EAAW,GAAX,EAAgB,KAAhB,CAAA;MACJ,IAAG,KAAA,KAAS,MAAZ;QACE,CAAA,CAAC,KAAD,CAAA,GAAU,IAAV,EADF;;MAEA,QAAA,GAAW,QAAA,GAAW,IAAC,CAAA;MACvB,UAAA,CACE,CAAA,CAAA,GAAA;eACE,IAAA,CAAK,GAAL;MADF,CADF,EAGE,KAAA,GAAM,IAHR;aAKA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAC,QAAA,GAAS,KAAV,EAAiB,QAAjB,EAA2B,GAA3B,CAAV;IATI;IAWN,IAAC,CAAA,GAAD,GAAO,GAAG,CAAC,IAAJ,CAAS,IAAT;WACP,GAAG,CAAC,KAAJ,CAAU,IAAV,EAAa,SAAb;EAlBE;;AAdC;;AAkCP,KAAA,GAAQ,IAAI,IAAJ,CAAS,EAAT,EAAa,CAAb;;AACR,KAAA,GAAQ,IAAI,IAAJ,CAAS,IAAT,EAAe,EAAf;;AACR,KAAA,GAAQ,IAAI,IAAJ,CAAS,IAAA,GAAK,EAAd,EAAkB,EAAlB;;AAER,OAAA,IAAO,KAAA,GAAQ,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe,KAAf;;AACf,OAAA,IAAO,KAAA,GAAQ,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe,KAAf;;AACf,OAAA,IAAO,KAAA,GAAQ,KAAK,CAAC,GAAG,CAAC,IAAV,CAAe,KAAf",
  "sourcesContent": [
    "import {_try} from './deps.js'\n\nexport class Cron\n  constructor:(@interval, @delay)->\n    @job = []\n\n  run:->\n    {interval} = @\n    for i from @job\n      i[0] -= interval\n      if i[0] < interval\n        i[0]=i[1]\n        _try i[2]\n    return\n\n\n  add:->\n    @timer = setInterval(\n      @run.bind(@)\n      @interval*1000\n    )\n\n    add = (interval, job, delay)->\n      if delay == undefined\n        {delay} = @\n      interval = interval * @interval\n      setTimeout(\n        =>\n          _try job\n        delay*1000\n      )\n      @job.push [interval+delay, interval, job]\n\n    @add = add.bind(@)\n    add.apply @, arguments\n\nMCron = new Cron(60, 3)\nHCron = new Cron(3600, 30)\nDCron = new Cron(3600*24, 60)\n\nexport mcron = MCron.add.bind(MCron)\nexport hcron = HCron.add.bind(HCron)\nexport dcron = DCron.add.bind(DCron)\n\n\n"
  ]
}